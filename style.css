
/*LINK FIGMA : https://www.figma.com/file/TJQBt8NCTm2s56xwZu6wLR/IMC-(Copy)?node-id=6%3A4     */


*{
    margin: 0;
    box-sizing: border-box;
    padding: 0;
}


.hide{
    display: none;
}
:root{
    font-size: 62.5%;
    
    /*cores- já deixar cores prontas*/
    --tt-heading: #0C3440;
    
    --tt-input: #DCE2E9;
    --bg-input:rgba(73, 80, 87, 0.3);
    --ot-input:  rgba(2, 121, 157, 1);
    
    --tt-placeholder: rgba(73, 80, 87, 0.5);
    --tt-label: #00453A;
    
    --tt-button: white;
    --bg-button: #02799D;
    --bg-button-hover:#043544;
    
    --bg-error: rgba(240, 62, 62, 1);
    --tt-error: rgba(255, 255, 255, 1);
}

.container{
    height: 100vh;
    display: grid;          
    place-content: center;
    /* centralizar caixa unica na tela */
   
}

body{
    background-color:  #040924
  
}

/* se colocar o tamanho da fonte so no body, não aplica no input e no button. */
body input button{
    font-size: 1.6rem;
}

.card{
    padding: 4.8rem 2rem 2rem;
    background: rgba(255, 255, 255, 1);
    max-width: 428px; /*como essa classe vai ser utilizada tambem no modal da pagina, deixei so o maximo para o formulário
    não ficar com mesma largura que o modal */
    margin-inline: auto;
    box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1);
    border-radius: .6rem;
    
}

.input-wrapper{
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
    
    
}

.tittle{
    color: var(--tt-heading);
    font-weight: bold;
    line-height: 4rem;
    font-size: 3.2rem;
    color: var(--tt-heading);
}

form{
    width: clamp(17rem,  17rem + 20vw , 30rem);
    
}

form h1{
    margin-bottom: 3.2rem;
}

form label{
    font-size: 1.4rem;
    line-height: 1.8rem;
    color: var(--tt-label);
    display: block;
    /* margin-bottom: .8rem; */
}

form input{
    background-color: var(--bg-input);
    border: 0.1rem solid var(--bg-input);
    border-radius: 0.4rem;
    padding:1.6rem
}

form input:focus{
    
    outline: 2px solid var(--ot-input)
}


.input-wrapper + .input-wrapper{   /* "input-wrapper que tenha anterior a ele outro input-wrapper"*/
    margin-top: 1.6rem;
}

form button{
    margin-top:3.2rem;
    padding: 1.6rem;
    width: 100%;
    
    color: var(--tt-button);
    background: var(--bg-button);
    font-weight: bold;
    
    line-height: 2rem;
    border: none;
    border-radius: .4rem;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: .8rem;

    cursor: pointer;
    transition: background .3s;
    
}

 form button:hover{
    background-color: var(--bg-button-hover);
}

/*modal*/

.modal-wrapper{
    position: absolute;   /* como é um card/modal, ficará sobreposto na tela, ou seja, posição absoluta*/
    inset: 0;  /* aplica a posição em relação a todos os lados*/
    background-color: rgba(0, 0, 0, 0.7)  ;
    display: grid;          
    place-content: center;

    opacity: 0;
    visibility: hidden;  /* essa caixa vão ser sobrepostas quando ocorrer algum tipo de evento, assim, o padrão delas é estar invisível*/

}

/* "colocar tais propriedades QUANDO tiver .modal-wrapper e .open juntos na mesma tag, assim, no js, adicionamos a classe open
                        quando ocorrer algum evento especifico, neste caso, não colocar só numeros no input.*/
.modal-wrapper.open{   
    visibility: visible;
    opacity: 1;
}

/* Ao precisar colocar o ''X '' de close no pop-up/modal, precisamos utilizar um position: absolute, contudo, ele fica absoluto ]
em relação a taga pai, por isso temos que colocar position: absoluto no pai, assim o filho pega os limites e medidas do pai
como referencia de posicionamento*/

.modal{
    position: relative; 
}

.modal button{
    background: none;
    border: none;

    position: absolute;  
    top: 1.6rem;
    right: 1.6rem;
    transition: transform 1s;
}

.modal button:hover{
    transform: scale(1.1);
}

/*alert error*/

.alert-error{
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    background-color: var(--bg-error);

    font-weight: bold;
    padding: .8rem 0;
    text-align: center;
    font-size: 1.6rem;
    color: var(--tt-error);

    /* essa caixa vão ser sobrepostas quando ocorrer algum tipo de evento, assim, o padrão delas é estar invisível*/
    opacity: 0;
    visibility: hidden;

    transform: translateY(-30px);
    transition: transform .5s;
}

.alert-error.open{
    visibility: visible;
    opacity: 1;

    transform: translateY(0);
}





@media(min-width: 720px){
    .card{
        padding: 48px 48px 48px 48px;   
    }
}

@media(min-width: 1024px){
    .card{
        padding: 48px 64px 64px 64px;   
    }
}





